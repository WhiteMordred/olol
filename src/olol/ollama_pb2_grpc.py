# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from . import ollama_pb2 as ollama__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in ollama_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OllamaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/ollama.OllamaService/GetVersion',
                request_serializer=ollama__pb2.VersionRequest.SerializeToString,
                response_deserializer=ollama__pb2.VersionInfo.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/ollama.OllamaService/HealthCheck',
                request_serializer=ollama__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=ollama__pb2.HealthCheckResponse.FromString,
                _registered_method=True)
        self.Generate = channel.unary_stream(
                '/ollama.OllamaService/Generate',
                request_serializer=ollama__pb2.GenerateRequest.SerializeToString,
                response_deserializer=ollama__pb2.GenerateResponse.FromString,
                _registered_method=True)
        self.Chat = channel.unary_stream(
                '/ollama.OllamaService/Chat',
                request_serializer=ollama__pb2.ChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ChatResponse.FromString,
                _registered_method=True)
        self.Embeddings = channel.unary_unary(
                '/ollama.OllamaService/Embeddings',
                request_serializer=ollama__pb2.EmbeddingsRequest.SerializeToString,
                response_deserializer=ollama__pb2.EmbeddingsResponse.FromString,
                _registered_method=True)
        self.Pull = channel.unary_stream(
                '/ollama.OllamaService/Pull',
                request_serializer=ollama__pb2.PullRequest.SerializeToString,
                response_deserializer=ollama__pb2.PullResponse.FromString,
                _registered_method=True)
        self.Push = channel.unary_stream(
                '/ollama.OllamaService/Push',
                request_serializer=ollama__pb2.PushRequest.SerializeToString,
                response_deserializer=ollama__pb2.PushResponse.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/ollama.OllamaService/Create',
                request_serializer=ollama__pb2.CreateRequest.SerializeToString,
                response_deserializer=ollama__pb2.CreateResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/ollama.OllamaService/List',
                request_serializer=ollama__pb2.ListRequest.SerializeToString,
                response_deserializer=ollama__pb2.ListResponse.FromString,
                _registered_method=True)
        self.Copy = channel.unary_unary(
                '/ollama.OllamaService/Copy',
                request_serializer=ollama__pb2.CopyRequest.SerializeToString,
                response_deserializer=ollama__pb2.CopyResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/ollama.OllamaService/Delete',
                request_serializer=ollama__pb2.DeleteRequest.SerializeToString,
                response_deserializer=ollama__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.Show = channel.unary_unary(
                '/ollama.OllamaService/Show',
                request_serializer=ollama__pb2.ShowRequest.SerializeToString,
                response_deserializer=ollama__pb2.ShowResponse.FromString,
                _registered_method=True)
        self.CreateSession = channel.unary_unary(
                '/ollama.OllamaService/CreateSession',
                request_serializer=ollama__pb2.SessionRequest.SerializeToString,
                response_deserializer=ollama__pb2.SessionResponse.FromString,
                _registered_method=True)
        self.DeleteSession = channel.unary_unary(
                '/ollama.OllamaService/DeleteSession',
                request_serializer=ollama__pb2.SessionRequest.SerializeToString,
                response_deserializer=ollama__pb2.SessionResponse.FromString,
                _registered_method=True)
        self.RunModel = channel.unary_unary(
                '/ollama.OllamaService/RunModel',
                request_serializer=ollama__pb2.ModelRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)
        self.LegacyChat = channel.unary_unary(
                '/ollama.OllamaService/LegacyChat',
                request_serializer=ollama__pb2.LegacyChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)
        self.StreamLegacyChat = channel.unary_stream(
                '/ollama.OllamaService/StreamLegacyChat',
                request_serializer=ollama__pb2.LegacyChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)


class OllamaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVersion(self, request, context):
        """Version and health checking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Generate(self, request, context):
        """Core Generation APIs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Embeddings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pull(self, request, context):
        """Model Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Push(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Copy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSession(self, request, context):
        """Session Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunModel(self, request, context):
        """Legacy methods for backward compatibility
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegacyChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamLegacyChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OllamaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=ollama__pb2.VersionRequest.FromString,
                    response_serializer=ollama__pb2.VersionInfo.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=ollama__pb2.HealthCheckRequest.FromString,
                    response_serializer=ollama__pb2.HealthCheckResponse.SerializeToString,
            ),
            'Generate': grpc.unary_stream_rpc_method_handler(
                    servicer.Generate,
                    request_deserializer=ollama__pb2.GenerateRequest.FromString,
                    response_serializer=ollama__pb2.GenerateResponse.SerializeToString,
            ),
            'Chat': grpc.unary_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=ollama__pb2.ChatRequest.FromString,
                    response_serializer=ollama__pb2.ChatResponse.SerializeToString,
            ),
            'Embeddings': grpc.unary_unary_rpc_method_handler(
                    servicer.Embeddings,
                    request_deserializer=ollama__pb2.EmbeddingsRequest.FromString,
                    response_serializer=ollama__pb2.EmbeddingsResponse.SerializeToString,
            ),
            'Pull': grpc.unary_stream_rpc_method_handler(
                    servicer.Pull,
                    request_deserializer=ollama__pb2.PullRequest.FromString,
                    response_serializer=ollama__pb2.PullResponse.SerializeToString,
            ),
            'Push': grpc.unary_stream_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=ollama__pb2.PushRequest.FromString,
                    response_serializer=ollama__pb2.PushResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=ollama__pb2.CreateRequest.FromString,
                    response_serializer=ollama__pb2.CreateResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=ollama__pb2.ListRequest.FromString,
                    response_serializer=ollama__pb2.ListResponse.SerializeToString,
            ),
            'Copy': grpc.unary_unary_rpc_method_handler(
                    servicer.Copy,
                    request_deserializer=ollama__pb2.CopyRequest.FromString,
                    response_serializer=ollama__pb2.CopyResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=ollama__pb2.DeleteRequest.FromString,
                    response_serializer=ollama__pb2.DeleteResponse.SerializeToString,
            ),
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=ollama__pb2.ShowRequest.FromString,
                    response_serializer=ollama__pb2.ShowResponse.SerializeToString,
            ),
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=ollama__pb2.SessionRequest.FromString,
                    response_serializer=ollama__pb2.SessionResponse.SerializeToString,
            ),
            'DeleteSession': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSession,
                    request_deserializer=ollama__pb2.SessionRequest.FromString,
                    response_serializer=ollama__pb2.SessionResponse.SerializeToString,
            ),
            'RunModel': grpc.unary_unary_rpc_method_handler(
                    servicer.RunModel,
                    request_deserializer=ollama__pb2.ModelRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
            'LegacyChat': grpc.unary_unary_rpc_method_handler(
                    servicer.LegacyChat,
                    request_deserializer=ollama__pb2.LegacyChatRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
            'StreamLegacyChat': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamLegacyChat,
                    request_deserializer=ollama__pb2.LegacyChatRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ollama.OllamaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ollama.OllamaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OllamaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/GetVersion',
            ollama__pb2.VersionRequest.SerializeToString,
            ollama__pb2.VersionInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/HealthCheck',
            ollama__pb2.HealthCheckRequest.SerializeToString,
            ollama__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Generate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.OllamaService/Generate',
            ollama__pb2.GenerateRequest.SerializeToString,
            ollama__pb2.GenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Chat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.OllamaService/Chat',
            ollama__pb2.ChatRequest.SerializeToString,
            ollama__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Embeddings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/Embeddings',
            ollama__pb2.EmbeddingsRequest.SerializeToString,
            ollama__pb2.EmbeddingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Pull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.OllamaService/Pull',
            ollama__pb2.PullRequest.SerializeToString,
            ollama__pb2.PullResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.OllamaService/Push',
            ollama__pb2.PushRequest.SerializeToString,
            ollama__pb2.PushResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/Create',
            ollama__pb2.CreateRequest.SerializeToString,
            ollama__pb2.CreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/List',
            ollama__pb2.ListRequest.SerializeToString,
            ollama__pb2.ListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Copy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/Copy',
            ollama__pb2.CopyRequest.SerializeToString,
            ollama__pb2.CopyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/Delete',
            ollama__pb2.DeleteRequest.SerializeToString,
            ollama__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/Show',
            ollama__pb2.ShowRequest.SerializeToString,
            ollama__pb2.ShowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/CreateSession',
            ollama__pb2.SessionRequest.SerializeToString,
            ollama__pb2.SessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/DeleteSession',
            ollama__pb2.SessionRequest.SerializeToString,
            ollama__pb2.SessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/RunModel',
            ollama__pb2.ModelRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LegacyChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.OllamaService/LegacyChat',
            ollama__pb2.LegacyChatRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamLegacyChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.OllamaService/StreamLegacyChat',
            ollama__pb2.LegacyChatRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class AsyncOllamaServiceStub(object):
    """For async implementation
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/ollama.AsyncOllamaService/GetVersion',
                request_serializer=ollama__pb2.VersionRequest.SerializeToString,
                response_deserializer=ollama__pb2.VersionInfo.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/ollama.AsyncOllamaService/HealthCheck',
                request_serializer=ollama__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=ollama__pb2.HealthCheckResponse.FromString,
                _registered_method=True)
        self.Generate = channel.unary_stream(
                '/ollama.AsyncOllamaService/Generate',
                request_serializer=ollama__pb2.GenerateRequest.SerializeToString,
                response_deserializer=ollama__pb2.GenerateResponse.FromString,
                _registered_method=True)
        self.Chat = channel.unary_stream(
                '/ollama.AsyncOllamaService/Chat',
                request_serializer=ollama__pb2.ChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ChatResponse.FromString,
                _registered_method=True)
        self.Embeddings = channel.unary_unary(
                '/ollama.AsyncOllamaService/Embeddings',
                request_serializer=ollama__pb2.EmbeddingsRequest.SerializeToString,
                response_deserializer=ollama__pb2.EmbeddingsResponse.FromString,
                _registered_method=True)
        self.Pull = channel.unary_stream(
                '/ollama.AsyncOllamaService/Pull',
                request_serializer=ollama__pb2.PullRequest.SerializeToString,
                response_deserializer=ollama__pb2.PullResponse.FromString,
                _registered_method=True)
        self.Push = channel.unary_stream(
                '/ollama.AsyncOllamaService/Push',
                request_serializer=ollama__pb2.PushRequest.SerializeToString,
                response_deserializer=ollama__pb2.PushResponse.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/ollama.AsyncOllamaService/Create',
                request_serializer=ollama__pb2.CreateRequest.SerializeToString,
                response_deserializer=ollama__pb2.CreateResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/ollama.AsyncOllamaService/List',
                request_serializer=ollama__pb2.ListRequest.SerializeToString,
                response_deserializer=ollama__pb2.ListResponse.FromString,
                _registered_method=True)
        self.Copy = channel.unary_unary(
                '/ollama.AsyncOllamaService/Copy',
                request_serializer=ollama__pb2.CopyRequest.SerializeToString,
                response_deserializer=ollama__pb2.CopyResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/ollama.AsyncOllamaService/Delete',
                request_serializer=ollama__pb2.DeleteRequest.SerializeToString,
                response_deserializer=ollama__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.Show = channel.unary_unary(
                '/ollama.AsyncOllamaService/Show',
                request_serializer=ollama__pb2.ShowRequest.SerializeToString,
                response_deserializer=ollama__pb2.ShowResponse.FromString,
                _registered_method=True)
        self.CreateSession = channel.unary_unary(
                '/ollama.AsyncOllamaService/CreateSession',
                request_serializer=ollama__pb2.SessionRequest.SerializeToString,
                response_deserializer=ollama__pb2.SessionResponse.FromString,
                _registered_method=True)
        self.DeleteSession = channel.unary_unary(
                '/ollama.AsyncOllamaService/DeleteSession',
                request_serializer=ollama__pb2.SessionRequest.SerializeToString,
                response_deserializer=ollama__pb2.SessionResponse.FromString,
                _registered_method=True)
        self.RunModel = channel.unary_unary(
                '/ollama.AsyncOllamaService/RunModel',
                request_serializer=ollama__pb2.ModelRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)
        self.LegacyChat = channel.unary_unary(
                '/ollama.AsyncOllamaService/LegacyChat',
                request_serializer=ollama__pb2.LegacyChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)
        self.StreamLegacyChat = channel.unary_stream(
                '/ollama.AsyncOllamaService/StreamLegacyChat',
                request_serializer=ollama__pb2.LegacyChatRequest.SerializeToString,
                response_deserializer=ollama__pb2.ModelResponse.FromString,
                _registered_method=True)


class AsyncOllamaServiceServicer(object):
    """For async implementation
    """

    def GetVersion(self, request, context):
        """Version and health checking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Generate(self, request, context):
        """Core Generation APIs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Embeddings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pull(self, request, context):
        """Model Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Push(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Copy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSession(self, request, context):
        """Session Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunModel(self, request, context):
        """Legacy methods for backward compatibility
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegacyChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamLegacyChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AsyncOllamaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=ollama__pb2.VersionRequest.FromString,
                    response_serializer=ollama__pb2.VersionInfo.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=ollama__pb2.HealthCheckRequest.FromString,
                    response_serializer=ollama__pb2.HealthCheckResponse.SerializeToString,
            ),
            'Generate': grpc.unary_stream_rpc_method_handler(
                    servicer.Generate,
                    request_deserializer=ollama__pb2.GenerateRequest.FromString,
                    response_serializer=ollama__pb2.GenerateResponse.SerializeToString,
            ),
            'Chat': grpc.unary_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=ollama__pb2.ChatRequest.FromString,
                    response_serializer=ollama__pb2.ChatResponse.SerializeToString,
            ),
            'Embeddings': grpc.unary_unary_rpc_method_handler(
                    servicer.Embeddings,
                    request_deserializer=ollama__pb2.EmbeddingsRequest.FromString,
                    response_serializer=ollama__pb2.EmbeddingsResponse.SerializeToString,
            ),
            'Pull': grpc.unary_stream_rpc_method_handler(
                    servicer.Pull,
                    request_deserializer=ollama__pb2.PullRequest.FromString,
                    response_serializer=ollama__pb2.PullResponse.SerializeToString,
            ),
            'Push': grpc.unary_stream_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=ollama__pb2.PushRequest.FromString,
                    response_serializer=ollama__pb2.PushResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=ollama__pb2.CreateRequest.FromString,
                    response_serializer=ollama__pb2.CreateResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=ollama__pb2.ListRequest.FromString,
                    response_serializer=ollama__pb2.ListResponse.SerializeToString,
            ),
            'Copy': grpc.unary_unary_rpc_method_handler(
                    servicer.Copy,
                    request_deserializer=ollama__pb2.CopyRequest.FromString,
                    response_serializer=ollama__pb2.CopyResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=ollama__pb2.DeleteRequest.FromString,
                    response_serializer=ollama__pb2.DeleteResponse.SerializeToString,
            ),
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=ollama__pb2.ShowRequest.FromString,
                    response_serializer=ollama__pb2.ShowResponse.SerializeToString,
            ),
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=ollama__pb2.SessionRequest.FromString,
                    response_serializer=ollama__pb2.SessionResponse.SerializeToString,
            ),
            'DeleteSession': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSession,
                    request_deserializer=ollama__pb2.SessionRequest.FromString,
                    response_serializer=ollama__pb2.SessionResponse.SerializeToString,
            ),
            'RunModel': grpc.unary_unary_rpc_method_handler(
                    servicer.RunModel,
                    request_deserializer=ollama__pb2.ModelRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
            'LegacyChat': grpc.unary_unary_rpc_method_handler(
                    servicer.LegacyChat,
                    request_deserializer=ollama__pb2.LegacyChatRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
            'StreamLegacyChat': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamLegacyChat,
                    request_deserializer=ollama__pb2.LegacyChatRequest.FromString,
                    response_serializer=ollama__pb2.ModelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ollama.AsyncOllamaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ollama.AsyncOllamaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AsyncOllamaService(object):
    """For async implementation
    """

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/GetVersion',
            ollama__pb2.VersionRequest.SerializeToString,
            ollama__pb2.VersionInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/HealthCheck',
            ollama__pb2.HealthCheckRequest.SerializeToString,
            ollama__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Generate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.AsyncOllamaService/Generate',
            ollama__pb2.GenerateRequest.SerializeToString,
            ollama__pb2.GenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Chat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.AsyncOllamaService/Chat',
            ollama__pb2.ChatRequest.SerializeToString,
            ollama__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Embeddings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/Embeddings',
            ollama__pb2.EmbeddingsRequest.SerializeToString,
            ollama__pb2.EmbeddingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Pull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.AsyncOllamaService/Pull',
            ollama__pb2.PullRequest.SerializeToString,
            ollama__pb2.PullResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.AsyncOllamaService/Push',
            ollama__pb2.PushRequest.SerializeToString,
            ollama__pb2.PushResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/Create',
            ollama__pb2.CreateRequest.SerializeToString,
            ollama__pb2.CreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/List',
            ollama__pb2.ListRequest.SerializeToString,
            ollama__pb2.ListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Copy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/Copy',
            ollama__pb2.CopyRequest.SerializeToString,
            ollama__pb2.CopyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/Delete',
            ollama__pb2.DeleteRequest.SerializeToString,
            ollama__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/Show',
            ollama__pb2.ShowRequest.SerializeToString,
            ollama__pb2.ShowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/CreateSession',
            ollama__pb2.SessionRequest.SerializeToString,
            ollama__pb2.SessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/DeleteSession',
            ollama__pb2.SessionRequest.SerializeToString,
            ollama__pb2.SessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/RunModel',
            ollama__pb2.ModelRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LegacyChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.AsyncOllamaService/LegacyChat',
            ollama__pb2.LegacyChatRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamLegacyChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.AsyncOllamaService/StreamLegacyChat',
            ollama__pb2.LegacyChatRequest.SerializeToString,
            ollama__pb2.ModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class DistributedOllamaServiceStub(object):
    """RPC service for distributed inference
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/ollama.DistributedOllamaService/GetVersion',
                request_serializer=ollama__pb2.VersionRequest.SerializeToString,
                response_deserializer=ollama__pb2.VersionInfo.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/ollama.DistributedOllamaService/HealthCheck',
                request_serializer=ollama__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=ollama__pb2.HealthCheckResponse.FromString,
                _registered_method=True)
        self.GetDeviceCapabilities = channel.unary_unary(
                '/ollama.DistributedOllamaService/GetDeviceCapabilities',
                request_serializer=ollama__pb2.DeviceCapabilitiesRequest.SerializeToString,
                response_deserializer=ollama__pb2.DeviceCapabilitiesResponse.FromString,
                _registered_method=True)
        self.DistributedGenerate = channel.unary_stream(
                '/ollama.DistributedOllamaService/DistributedGenerate',
                request_serializer=ollama__pb2.DistributedGenerateRequest.SerializeToString,
                response_deserializer=ollama__pb2.DistributedGenerateResponse.FromString,
                _registered_method=True)
        self.ProcessLayers = channel.unary_stream(
                '/ollama.DistributedOllamaService/ProcessLayers',
                request_serializer=ollama__pb2.LayerProcessRequest.SerializeToString,
                response_deserializer=ollama__pb2.LayerProcessResponse.FromString,
                _registered_method=True)


class DistributedOllamaServiceServicer(object):
    """RPC service for distributed inference
    """

    def GetVersion(self, request, context):
        """Version and health checking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceCapabilities(self, request, context):
        """Device capabilities and registry
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DistributedGenerate(self, request, context):
        """Distributed inference
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessLayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DistributedOllamaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=ollama__pb2.VersionRequest.FromString,
                    response_serializer=ollama__pb2.VersionInfo.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=ollama__pb2.HealthCheckRequest.FromString,
                    response_serializer=ollama__pb2.HealthCheckResponse.SerializeToString,
            ),
            'GetDeviceCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceCapabilities,
                    request_deserializer=ollama__pb2.DeviceCapabilitiesRequest.FromString,
                    response_serializer=ollama__pb2.DeviceCapabilitiesResponse.SerializeToString,
            ),
            'DistributedGenerate': grpc.unary_stream_rpc_method_handler(
                    servicer.DistributedGenerate,
                    request_deserializer=ollama__pb2.DistributedGenerateRequest.FromString,
                    response_serializer=ollama__pb2.DistributedGenerateResponse.SerializeToString,
            ),
            'ProcessLayers': grpc.unary_stream_rpc_method_handler(
                    servicer.ProcessLayers,
                    request_deserializer=ollama__pb2.LayerProcessRequest.FromString,
                    response_serializer=ollama__pb2.LayerProcessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ollama.DistributedOllamaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ollama.DistributedOllamaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DistributedOllamaService(object):
    """RPC service for distributed inference
    """

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.DistributedOllamaService/GetVersion',
            ollama__pb2.VersionRequest.SerializeToString,
            ollama__pb2.VersionInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.DistributedOllamaService/HealthCheck',
            ollama__pb2.HealthCheckRequest.SerializeToString,
            ollama__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDeviceCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ollama.DistributedOllamaService/GetDeviceCapabilities',
            ollama__pb2.DeviceCapabilitiesRequest.SerializeToString,
            ollama__pb2.DeviceCapabilitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DistributedGenerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.DistributedOllamaService/DistributedGenerate',
            ollama__pb2.DistributedGenerateRequest.SerializeToString,
            ollama__pb2.DistributedGenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessLayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ollama.DistributedOllamaService/ProcessLayers',
            ollama__pb2.LayerProcessRequest.SerializeToString,
            ollama__pb2.LayerProcessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
